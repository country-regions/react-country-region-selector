"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[259],{3318:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"demos/features/NameIdClassAttrs","title":"Name, ID, Class attributes","description":"This demo shows how to set name, id and class attributes on each component.","source":"@site/docs/demos/features/NameIdClassAttrs.mdx","sourceDirName":"demos/features","slug":"/demos/features/NameIdClassAttrs","permalink":"/react-country-region-selector/demos/features/NameIdClassAttrs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Name, ID, Class attributes","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Custom Default Option Labels","permalink":"/react-country-region-selector/demos/features/CustomDefaultOptionLabels"},"next":{"title":"Shortcode Labels","permalink":"/react-country-region-selector/demos/features/ShortcodeLabels"}}');var o=n(5723),a=n(6142),r=n(2155),i=n(7388);const c=()=>{const[e,t]=(0,r.useState)("Canada"),[n,s]=(0,r.useState)("British Columbia");return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.wP,{value:e,id:"my-country-field-id",name:"my-country-field",className:"my-custom-class second-class",onChange:e=>t(e)}),(0,o.jsx)(i.mM,{country:e,value:n,name:"my-region-field-name",id:"my-region-field-id",className:"another-custom-class",onChange:e=>s(e)})]})},l={title:"Name, ID, Class attributes",sidebar_position:5},d=void 0,u={},m=[];function h(e){const t={code:"code",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["This demo shows how to set ",(0,o.jsx)(t.code,{children:"name"}),", ",(0,o.jsx)(t.code,{children:"id"})," and ",(0,o.jsx)(t.code,{children:"class"})," attributes on each component."]}),"\n",(0,o.jsx)(t.p,{children:"There's nothing visible to see on this demo, but view the HTML source to see the change."}),"\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'import React, { useState } from \'react\';\nimport { CountryDropdown, RegionDropdown } from \'react-country-region-selector\';\n\nconst NameIdClassAttrs = () => {\n  const [country, setCountry] = useState(\'Canada\');\n  const [region, setRegion] = useState(\'British Columbia\');\n\n  return (\n    <>\n      <CountryDropdown\n        value={country}\n        // highlight-next-line\n        id="my-country-field-id"\n        // highlight-next-line\n        name="my-country-field"\n        // highlight-next-line\n        className="my-custom-class second-class"\n        onChange={(val) => setCountry(val)}\n      />\n      <RegionDropdown\n        country={country}\n        value={region}\n        // highlight-next-line\n        name="my-region-field-name"\n        // highlight-next-line\n        id="my-region-field-id"\n        // highlight-next-line\n        className="another-custom-class"\n        onChange={(val) => setRegion(val)}\n      />\n    </>\n  );\n};\n\nexport default NameIdClassAttrs;\n'})})]})}function g(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}}}]);