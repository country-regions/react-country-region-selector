"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[435],{1486:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>y,frontMatter:()=>l,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"demos/features/ArbitraryAttributes","title":"Arbitrary Attributes","description":"You can pass any additional attributes you want to the two components and they\'ll be added to the native select","source":"@site/docs/demos/features/ArbitraryAttributes.mdx","sourceDirName":"demos/features","slug":"/demos/features/ArbitraryAttributes","permalink":"/react-country-region-selector/demos/features/ArbitraryAttributes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"title":"Arbitrary Attributes","sidebar_position":13},"sidebar":"tutorialSidebar","previous":{"title":"Disable Fields","permalink":"/react-country-region-selector/demos/features/DisableFields"},"next":{"title":"Custom Options","permalink":"/react-country-region-selector/demos/features/CustomOptions"}}');var o=n(5723),s=n(6142),a=n(2155),i=n(7388);const c=()=>{const[e,t]=(0,a.useState)(""),[n,r]=(0,a.useState)("");return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.wP,{value:e,onChange:e=>t(e),style:{backgroundColor:"blue",color:"white",padding:10,fontSize:20}}),(0,o.jsx)(i.mM,{country:e,value:n,onChange:e=>r(e),style:{backgroundColor:"green",color:"white",padding:10,fontSize:20}})]})},l={title:"Arbitrary Attributes",sidebar_position:13},u=void 0,d={},p=[];function b(e){const t={code:"code",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["You can pass any additional attributes you want to the two components and they'll be added to the native ",(0,o.jsx)(t.code,{children:"select"}),"\nHTML element as-is. This example passes a custom ",(0,o.jsx)(t.code,{children:"style"})," prop to make it look as ugly as $&@!$*!@ hell."]}),"\n",(0,o.jsx)(c,{}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"import React, { useState } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nconst ArbitraryProps = () => {\n  const [country, setCountry] = useState('');\n  const [region, setRegion] = useState('');\n\n  return (\n    <>\n      <CountryDropdown\n        value={country}\n        onChange={(val) => setCountry(val)}\n        style={{\n          backgroundColor: 'blue',\n          color: 'white',\n          padding: 10,\n          fontSize: 20,\n        }}\n      />\n      <RegionDropdown\n        country={country}\n        value={region}\n        onChange={(val) => setRegion(val)}\n        style={{\n          backgroundColor: 'green',\n          color: 'white',\n          padding: 10,\n          fontSize: 20,\n        }}\n      />\n    </>\n  );\n};\n\nexport default ArbitraryProps;\n"})})]})}function y(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(b,{...e})}):b(e)}}}]);