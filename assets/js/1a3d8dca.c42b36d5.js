"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[884],{1573:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>g,default:()=>b,frontMatter:()=>p,metadata:()=>o,toc:()=>R});const o=JSON.parse('{"id":"demos/integrations/FluentUI","title":"Fluent UI","description":"This demo illustrates how you can integrate this script with Fluent UI 9. Note the customRender method and how","source":"@site/docs/demos/integrations/FluentUI.mdx","sourceDirName":"demos/integrations","slug":"/demos/integrations/FluentUI","permalink":"/react-country-region-selector/demos/integrations/FluentUI","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Fluent UI","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Material UI","permalink":"/react-country-region-selector/demos/integrations/MaterialUI"},"next":{"title":"React Select","permalink":"/react-country-region-selector/demos/integrations/ReactSelect"}}');var r=t(5723),s=t(6142),i=t(2155),l=t(8935),c=t(6951),a=t(7868),u=t(1743),d=t(7388);const h=e=>{let{options:n,...t}=e;return(0,r.jsx)(l.l,{...t,children:n.map((e=>{let{label:n,value:t,key:o}=e;return(0,r.jsx)("option",{value:t,children:n},o)}))})},m=()=>{const[e,n]=i.useState(""),[t,o]=i.useState(""),s=(0,c.Bi)(),l=(0,c.Bi)();return(0,r.jsxs)(a.q,{theme:u.o,children:[(0,r.jsx)("label",{htmlFor:s,children:"Country"}),(0,r.jsx)(d.wP,{value:e,id:s,onChange:e=>{n(e),o("")},customRender:h}),(0,r.jsx)("label",{htmlFor:l,children:"Region"}),(0,r.jsx)(d.mM,{country:e,value:t,id:l,onChange:e=>o(e),disableWhenEmpty:!0,customRender:h})]})},p={title:"Fluent UI",sidebar_position:2},g=void 0,y={},R=[];function I(e){const n={code:"code",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This demo illustrates how you can integrate this script with Fluent UI 9. Note the ",(0,r.jsx)(n.code,{children:"customRender"})," method and how\nits handling the actual rendering of the dropdowns."]}),"\n",(0,r.jsx)(m,{}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import * as React from 'react';\nimport {\n  Select,\n  useId,\n  FluentProvider,\n  webLightTheme,\n} from '@fluentui/react-components';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nconst customRender = ({ options, ...selectProps }) => {\n  return (\n    <Select {...selectProps}>\n      {options.map(({ label, value, key }) => (\n        <option value={value} key={key}>\n          {label}\n        </option>\n      ))}\n    </Select>\n  );\n};\n\nconst FluentUISelect = () => {\n  const [country, setCountry] = React.useState('');\n  const [region, setRegion] = React.useState('');\n  const countrySelectId = useId();\n  const regionSelectId = useId();\n\n  return (\n    <FluentProvider theme={webLightTheme}>\n      <label htmlFor={countrySelectId}>Country</label>\n      <CountryDropdown\n        value={country}\n        id={countrySelectId}\n        onChange={(val) => {\n          setCountry(val);\n          setRegion('');\n        }}\n        customRender={customRender}\n      />\n      <label htmlFor={regionSelectId}>Region</label>\n      <RegionDropdown\n        country={country}\n        value={region}\n        id={regionSelectId}\n        onChange={(val) => setRegion(val)}\n        disableWhenEmpty={true}\n        customRender={customRender}\n      />\n    </FluentProvider>\n  );\n};\n\nexport default FluentUISelect;\n"})})]})}function b(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(I,{...e})}):I(e)}}}]);