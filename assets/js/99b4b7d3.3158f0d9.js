"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[657],{3512:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"advanced/performance","title":"Performance","description":"As of 4.0.2 I fixed a bug where countries with utf-8 characters weren\'t being sorted properly. The \xc5land Islands would","source":"@site/docs/advanced/performance.mdx","sourceDirName":"advanced","slug":"/advanced/performance","permalink":"/react-country-region-selector/advanced/performance","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Performance"},"sidebar":"tutorialSidebar","previous":{"title":"Advanced","permalink":"/react-country-region-selector/advanced/"},"next":{"title":"Reducing Bundle Sizes","permalink":"/react-country-region-selector/advanced/bundleSizes"}}');var s=n(5723),o=n(6142);const i={sidebar_position:1,title:"Performance"},a=void 0,d={},c=[{value:"Recommendation",id:"recommendation",level:3}];function l(e){const r={a:"a",code:"code",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["As of ",(0,s.jsx)(r.code,{children:"4.0.2"})," I fixed a bug where countries with utf-8 characters weren't being sorted properly. The ",(0,s.jsx)(r.code,{children:"\xc5land Islands"})," would\nend up getting listed at the very end after Zimbabwe, and not with the A's. Oops!"]}),"\n",(0,s.jsxs)(r.p,{children:["To resolve that, this script now uses ",(0,s.jsx)(r.code,{children:"localeCompare"})," for sorting. This works great, but it's quite a bit slower than the\nprevious sorting algorithm."]}),"\n",(0,s.jsx)(r.h3,{id:"recommendation",children:"Recommendation"}),"\n",(0,s.jsxs)(r.p,{children:["If you're using the ",(0,s.jsx)(r.code,{children:"whitelist"}),", ",(0,s.jsx)(r.code,{children:"blacklist"}),", or ",(0,s.jsx)(r.code,{children:"priorityOptions"})," props, don't pass in a fresh object as a prop each time. That'll\ncause an unnecessary and expensive re-sort every time. Instead, memoize the prop instead."]}),"\n",(0,s.jsxs)(r.p,{children:["I've documented this issue on those demo pages and added example code so you can see how memoization be be done. See the\n",(0,s.jsx)(r.a,{href:"../demos/features/PriorityOptions",children:"Priority Options"})," as an illustration."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);