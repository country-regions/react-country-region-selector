"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[751],{2991:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"styling","title":"Styling","description":"This comes up quite a lot. The react-country-region-selector package outputs plain vanilla HTML ` and  elements - nothing more. So if you need to change the styles of the dropdown elements, it just a matter of using CSS. To target the elements, pass a class via the className` prop to each component, and style it based on that - or pass custom styles right to the component, as shown here.","source":"@site/docs/styling.md","sourceDirName":".","slug":"/styling","permalink":"/react-country-region-selector/styling","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Props","permalink":"/react-country-region-selector/props"},"next":{"title":"Demos","permalink":"/react-country-region-selector/demos/"}}');var n=s(5723),r=s(6142);const i={sidebar_position:2},a="Styling",c={},l=[];function h(e){const t={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"styling",children:"Styling"})}),"\n",(0,n.jsxs)(t.p,{children:["This comes up quite a lot. The ",(0,n.jsx)(t.code,{children:"react-country-region-selector"})," package outputs ",(0,n.jsxs)(t.em,{children:["plain vanilla HTML ",(0,n.jsx)(t.code,{children:"<select>"})," and ",(0,n.jsx)(t.code,{children:"<option>"})," elements"]})," - nothing more. So if you need to change the styles of the dropdown elements, it just a matter of using CSS. To target the elements, pass a class via the ",(0,n.jsx)(t.code,{children:"className"})," prop to each component, and style it based on that - or pass custom styles right to the component, ",(0,n.jsx)(t.a,{href:"./demos/features/ArbitraryAttributes",children:"as shown here"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["Note that if you're using this script in an ",(0,n.jsx)(t.a,{href:"./demos/integrations/",children:"integration"}),", like with Material UI, styling will be different. You'll need to refer to those\nexternal libraries to find out how styling works for them."]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);