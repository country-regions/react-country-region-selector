"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[751],{2991:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"styling","title":"Styling","description":"This comes up quite a lot. The react-country-region-selector package outputs simple HTML ` and  elements - nothing more. So if you need to change the styles of the dropdowns, it just a matter of using CSS in your page. To target the elements, pass a class via the className prop to each component, and style it based on that - or pass custom a custom style` prop right to the component, as shown here.","source":"@site/docs/styling.md","sourceDirName":".","slug":"/styling","permalink":"/react-country-region-selector/styling","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Props","permalink":"/react-country-region-selector/props"},"next":{"title":"Demos","permalink":"/react-country-region-selector/demos/"}}');var r=s(5723),n=s(6142);const i={sidebar_position:2},a="Styling",c={},l=[];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"styling",children:"Styling"})}),"\n",(0,r.jsxs)(t.p,{children:["This comes up quite a lot. The ",(0,r.jsx)(t.code,{children:"react-country-region-selector"})," package outputs ",(0,r.jsxs)(t.em,{children:["simple HTML ",(0,r.jsx)(t.code,{children:"<select>"})," and ",(0,r.jsx)(t.code,{children:"<option>"})," elements"]})," - nothing more. So if you need to change the styles of the dropdowns, it just a matter of using CSS in your page. To target the elements, pass a class via the ",(0,r.jsx)(t.code,{children:"className"})," prop to each component, and style it based on that - or pass custom a custom ",(0,r.jsx)(t.code,{children:"style"})," prop right to the component, ",(0,r.jsx)(t.a,{href:"./demos/features/ArbitraryAttributes",children:"as shown here"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Note that if you're using this script in an ",(0,r.jsx)(t.a,{href:"./demos/integrations/",children:"integration"}),", like with Material UI, styling will be different. You'll need to refer to those\nexternal libraries to find out how styling works for them."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);