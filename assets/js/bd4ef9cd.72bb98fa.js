"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[466],{3462:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>p,default:()=>v,frontMatter:()=>d,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"demos/integrations/ReactSelect","title":"React Select","description":"React-select is a popular standalone component for dropdowns. This shows an","source":"@site/docs/demos/integrations/ReactSelect.mdx","sourceDirName":"demos/integrations","slug":"/demos/integrations/ReactSelect","permalink":"/react-country-region-selector/demos/integrations/ReactSelect","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"React Select"},"sidebar":"tutorialSidebar","previous":{"title":"Fluent UI","permalink":"/react-country-region-selector/demos/integrations/FluentUI"},"next":{"title":"Advanced","permalink":"/react-country-region-selector/advanced/"}}');var s=t(5723),a=t(6142),r=t(2155),c=t(2386),i=t(7388);const l=e=>{const{options:n,value:t,disabled:o,onChange:a,onBlur:r,customProps:i,...l}=e;return(0,s.jsx)(c.Ay,{...l,options:n,isDisabled:o,isSearchable:!0,isClearable:!0,value:i.reactSelectValue,onChange:i.onChange})},u=()=>{const[e,n]=(0,r.useState)(),[t,o]=(0,r.useState)();return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{style:{width:200,display:"inline-block",marginRight:8},children:(0,s.jsx)(i.wP,{value:e?.value||"",className:"country",name:"country-field",customRender:l,customProps:{reactSelectValue:e,classNamePrefix:"country-",onChange:e=>{n(e||void 0),o(null)}}})}),(0,s.jsx)("div",{style:{width:200,display:"inline-block"},children:(0,s.jsx)(i.mM,{country:e?.value||"",value:t?.value||null,className:"region",name:"region-field",customRender:l,customProps:{reactSelectValue:t,classNamePrefix:"region-",onChange:e=>{o(e||void 0)}}})})]})},d={title:"React Select"},p=void 0,m={},h=[];function g(e){const n={a:"a",code:"code",em:"em",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://react-select.com/",children:"React-select"})," is a popular standalone component for dropdowns. This shows an\nexample integration."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Warning: opinions!"})," I've used react-select on many projects and like it a lot. Once it's integrated into\nyour app it looks and works intuitively and everyone loves it. But every time I use it I'm struck by the poor\nAPI design of having to pass a complex object as the ",(0,s.jsx)(n.code,{children:"value"})," to the fields. That makes even common things like\naccommodating localization becomes very complicated since the value needs to change all the time."]}),"\n",(0,s.jsxs)(n.p,{children:["This integration highlights that difficult API: we rely on the ",(0,s.jsx)(n.code,{children:"customProps"})," prop to pass in various things including\na custom ",(0,s.jsx)(n.code,{children:"onChange"})," handler."]}),"\n",(0,s.jsxs)(n.p,{children:["But hopefully this'll give you a starting point for configurating your own ",(0,s.jsx)(n.code,{children:"react-select"})," usage."]}),"\n",(0,s.jsx)(u,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React, { useState } from 'react';\nimport Select from 'react-select';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nconst customRender = (props) => {\n  const {\n    options,\n    value,\n    disabled,\n    onChange,\n    onBlur,\n    customProps,\n    ...selectProps\n  } = props;\n\n  return (\n    <Select\n      {...selectProps}\n      options={options}\n      isDisabled={disabled}\n      isSearchable={true}\n      isClearable={true}\n      value={customProps.reactSelectValue}\n      onChange={customProps.onChange}\n    />\n  );\n};\n\ntype ReactSelectOption = {\n  label: string;\n  value: string;\n};\n\nconst ReactSelect = () => {\n  const [country, setCountry] = useState<ReactSelectOption | undefined>();\n  const [region, setRegion] = useState<ReactSelectOption | undefined>();\n\n  return (\n    <>\n      <div style={{ width: 200, display: 'inline-block', marginRight: 8 }}>\n        <CountryDropdown\n          value={country?.value || ''}\n          className=\"country\"\n          name=\"country-field\"\n          customRender={customRender}\n          customProps={{\n            reactSelectValue: country,\n            classNamePrefix: 'country-',\n            onChange: (value: ReactSelectOption) => {\n              setCountry(value ? value : undefined);\n              setRegion(null);\n            },\n          }}\n        />\n      </div>\n      <div style={{ width: 200, display: 'inline-block' }}>\n        <RegionDropdown\n          country={country?.value || ''}\n          value={region?.value || null}\n          className=\"region\"\n          name=\"region-field\"\n          customRender={customRender}\n          customProps={{\n            reactSelectValue: region,\n            classNamePrefix: 'region-',\n            onChange: (value: ReactSelectOption) => {\n              setRegion(value ? value : undefined);\n            },\n          }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ReactSelect;\n"})})]})}function v(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);