"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[503],{4659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>u,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"demos/features/NoDefaultOption","title":"No Default Option","description":"The showDefaultOption boolean prop (default: true) can be set on both CountryDropdown and RegionDropdown. When set to","source":"@site/docs/demos/features/NoDefaultOption.mdx","sourceDirName":"demos/features","slug":"/demos/features/NoDefaultOption","permalink":"/react-country-region-selector/demos/features/NoDefaultOption","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"No Default Option","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Features","permalink":"/react-country-region-selector/demos/features/"},"next":{"title":"Disable Empty Region Field","permalink":"/react-country-region-selector/demos/features/DisableEmptyRegionField"}}');var r=n(5723),s=n(6142),a=n(2155),i=n(7388);const l=()=>{const[e,t]=(0,a.useState)(""),[n,o]=(0,a.useState)("");return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.wP,{value:e,onChange:e=>t(e),showDefaultOption:!1}),(0,r.jsx)(i.mM,{country:e,value:n,onChange:e=>o(e),showDefaultOption:!1})]})},u={title:"No Default Option",sidebar_position:2},c=void 0,d={},p=[];function f(e){const t={code:"code",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"showDefaultOption"})," boolean prop (default: ",(0,r.jsx)(t.code,{children:"true"}),") can be set on both ",(0,r.jsx)(t.code,{children:"CountryDropdown"})," and ",(0,r.jsx)(t.code,{children:"RegionDropdown"}),". When set to\n",(0,r.jsx)(t.code,{children:"false"}),' the default "Select Country" / "Select Region" option won\'t appear.']}),"\n",(0,r.jsx)(l,{}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import React, { useState } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nconst NoDefaultOption = () => {\n  const [country, setCountry] = useState('');\n  const [region, setRegion] = useState('');\n\n  return (\n    <>\n      <CountryDropdown\n        value={country}\n        onChange={(val) => setCountry(val)}\n        // highlight-next-line\n        showDefaultOption={false}\n      />\n      <RegionDropdown\n        country={country}\n        value={region}\n        onChange={(val) => setRegion(val)}\n        // highlight-next-line\n        showDefaultOption={false}\n      />\n    </>\n  );\n};\n\nexport default NoDefaultOption;\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}}}]);