"use strict";(self.webpackChunkrcrs_docs=self.webpackChunkrcrs_docs||[]).push([[981],{9657:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>u,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"demos/features/DisableEmptyRegionField","title":"Disable Empty Region Field","description":"When the user hasn\'t selected a country, nothing\'s going to show up in the Region dropdown. If you want to disable it,","source":"@site/docs/demos/features/DisableEmptyRegionField.mdx","sourceDirName":"demos/features","slug":"/demos/features/DisableEmptyRegionField","permalink":"/react-country-region-selector/demos/features/DisableEmptyRegionField","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Disable Empty Region Field","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"No Default Option","permalink":"/react-country-region-selector/demos/features/NoDefaultOption"},"next":{"title":"Custom Default Option Labels","permalink":"/react-country-region-selector/demos/features/CustomDefaultOptionLabels"}}');var s=n(5723),r=n(6142),i=n(2155),a=n(7388);const l=()=>{const[e,t]=(0,i.useState)(""),[n,o]=(0,i.useState)("");return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.wP,{value:e,onChange:e=>t(e)}),(0,s.jsx)(a.mM,{country:e,value:n,onChange:e=>o(e),disableWhenEmpty:!0})]})},u={title:"Disable Empty Region Field",sidebar_position:3},c=void 0,d={},p=[];function g(e){const t={code:"code",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["When the user hasn't selected a country, nothing's going to show up in the Region dropdown. If you want to disable it,\nuse the ",(0,s.jsx)(t.code,{children:"disableWhenEmpty"})," prop."]}),"\n",(0,s.jsx)(l,{}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import React, { useState } from 'react';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\nconst NoDefaultOption = () => {\n  const [country, setCountry] = useState('');\n  const [region, setRegion] = useState('');\n\n  return (\n    <>\n      <CountryDropdown value={country} onChange={(val) => setCountry(val)} />\n      <RegionDropdown\n        country={country}\n        value={region}\n        onChange={(val) => setRegion(val)}\n        // highlight-next-line\n        disableWhenEmpty={true}\n      />\n    </>\n  );\n};\n\nexport default NoDefaultOption;\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);